{
  "uid" : "1a48a26b26f43feb",
  "name" : "[Main]-->[Bluetooth]",
  "fullName" : "testcase.test_break.Test_break#test_main",
  "historyId" : "a110c62f8dccdfbdb85de53ec3830c69",
  "time" : {
    "start" : 1620889025151,
    "stop" : 1620889112988,
    "duration" : 87837
  },
  "description" : "该用例[Main]-->[Bluetooth]页面来回切换测试",
  "descriptionHtml" : "<p>该用例[Main]--&gt;[Bluetooth]页面来回切换测试</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert None\n +  where None = <bound method element_operate.get_element of <common.element_operate.element_operate object at 0x000001C5D0C092E8>>(loc=('id', 'factory.dev:id/ac_lgmain_img_but_bluetooth'), info='Main')\n +    where <bound method element_operate.get_element of <common.element_operate.element_operate object at 0x000001C5D0C092E8>> = <common.element_operate.element_operate object at 0x000001C5D0C092E8>.get_element\n +      where <common.element_operate.element_operate object at 0x000001C5D0C092E8> = element_operate(<appium.webdriver.webdriver.WebDriver (session=\"bfaeb61d-a408-43b4-877f-8fe5932efc64\")>)\n +        where <appium.webdriver.webdriver.WebDriver (session=\"bfaeb61d-a408-43b4-877f-8fe5932efc64\")> = <testcase.test_break.Test_break object at 0x000001C5D0C302B0>.driver\n +    and   ('id', 'factory.dev:id/ac_lgmain_img_but_bluetooth') = Main.bluetooth_sign",
  "statusTrace" : "self = <testcase.test_break.Test_break object at 0x000001C5D0C302B0>\ndriver_start = <appium.webdriver.webdriver.WebDriver (session=\"bfaeb61d-a408-43b4-877f-8fe5932efc64\")>\n\n    @allure.story(\"用例--[Main]-->[Bluetooth]\")\n    @allure.description(\"该用例[Main]-->[Bluetooth]页面来回切换测试\")\n    @allure.title('[Main]-->[Bluetooth]')\n    @level_('HIGH')\n    @pytest.mark.usefixtures('conftest')\n    @pytest.mark.usefixtures('driver_start')\n    def test_main(self,driver_start):\n       self.driver=driver_start\n       threading_function([self.main,self.break_,self.app_process_])\n>      assert element_operate(self.driver).get_element(loc=Main.bluetooth_sign,info='Main')\nE      assert None\nE       +  where None = <bound method element_operate.get_element of <common.element_operate.element_operate object at 0x000001C5D0C092E8>>(loc=('id', 'factory.dev:id/ac_lgmain_img_but_bluetooth'), info='Main')\nE       +    where <bound method element_operate.get_element of <common.element_operate.element_operate object at 0x000001C5D0C092E8>> = <common.element_operate.element_operate object at 0x000001C5D0C092E8>.get_element\nE       +      where <common.element_operate.element_operate object at 0x000001C5D0C092E8> = element_operate(<appium.webdriver.webdriver.WebDriver (session=\"bfaeb61d-a408-43b4-877f-8fe5932efc64\")>)\nE       +        where <appium.webdriver.webdriver.WebDriver (session=\"bfaeb61d-a408-43b4-877f-8fe5932efc64\")> = <testcase.test_break.Test_break object at 0x000001C5D0C302B0>.driver\nE       +    and   ('id', 'factory.dev:id/ac_lgmain_img_but_bluetooth') = Main.bluetooth_sign\n\ntestcase\\test_break.py:62: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "该用例[Main]-->[Bluetooth]页面来回切换测试",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert None\n +  where None = <bound method element_operate.get_element of <common.element_operate.element_operate object at 0x000001C5D0C092E8>>(loc=('id', 'factory.dev:id/ac_lgmain_img_but_bluetooth'), info='Main')\n +    where <bound method element_operate.get_element of <common.element_operate.element_operate object at 0x000001C5D0C092E8>> = <common.element_operate.element_operate object at 0x000001C5D0C092E8>.get_element\n +      where <common.element_operate.element_operate object at 0x000001C5D0C092E8> = element_operate(<appium.webdriver.webdriver.WebDriver (session=\"bfaeb61d-a408-43b4-877f-8fe5932efc64\")>)\n +        where <appium.webdriver.webdriver.WebDriver (session=\"bfaeb61d-a408-43b4-877f-8fe5932efc64\")> = <testcase.test_break.Test_break object at 0x000001C5D0C302B0>.driver\n +    and   ('id', 'factory.dev:id/ac_lgmain_img_but_bluetooth') = Main.bluetooth_sign",
    "statusTrace" : "self = <testcase.test_break.Test_break object at 0x000001C5D0C302B0>\ndriver_start = <appium.webdriver.webdriver.WebDriver (session=\"bfaeb61d-a408-43b4-877f-8fe5932efc64\")>\n\n    @allure.story(\"用例--[Main]-->[Bluetooth]\")\n    @allure.description(\"该用例[Main]-->[Bluetooth]页面来回切换测试\")\n    @allure.title('[Main]-->[Bluetooth]')\n    @level_('HIGH')\n    @pytest.mark.usefixtures('conftest')\n    @pytest.mark.usefixtures('driver_start')\n    def test_main(self,driver_start):\n       self.driver=driver_start\n       threading_function([self.main,self.break_,self.app_process_])\n>      assert element_operate(self.driver).get_element(loc=Main.bluetooth_sign,info='Main')\nE      assert None\nE       +  where None = <bound method element_operate.get_element of <common.element_operate.element_operate object at 0x000001C5D0C092E8>>(loc=('id', 'factory.dev:id/ac_lgmain_img_but_bluetooth'), info='Main')\nE       +    where <bound method element_operate.get_element of <common.element_operate.element_operate object at 0x000001C5D0C092E8>> = <common.element_operate.element_operate object at 0x000001C5D0C092E8>.get_element\nE       +      where <common.element_operate.element_operate object at 0x000001C5D0C092E8> = element_operate(<appium.webdriver.webdriver.WebDriver (session=\"bfaeb61d-a408-43b4-877f-8fe5932efc64\")>)\nE       +        where <appium.webdriver.webdriver.WebDriver (session=\"bfaeb61d-a408-43b4-877f-8fe5932efc64\")> = <testcase.test_break.Test_break object at 0x000001C5D0C302B0>.driver\nE       +    and   ('id', 'factory.dev:id/ac_lgmain_img_but_bluetooth') = Main.bluetooth_sign\n\ntestcase\\test_break.py:62: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f26712932463f64a",
      "name" : "失败截图",
      "source" : "f26712932463f64a.png",
      "type" : "image/png",
      "size" : 152324
    }, {
      "uid" : "b5ddc9f5b6d01193",
      "name" : "log",
      "source" : "b5ddc9f5b6d01193.txt",
      "type" : "text/plain",
      "size" : 7392
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "页面来回切换测试"
  }, {
    "name" : "epic",
    "value" : "异常测试"
  }, {
    "name" : "severity",
    "value" : "trivial"
  }, {
    "name" : "story",
    "value" : "用例--[Main]-->[Bluetooth]"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('driver_start')"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_break"
  }, {
    "name" : "subSuite",
    "value" : "Test_break"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9QI7SSI"
  }, {
    "name" : "thread",
    "value" : "6280-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_break"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('driver_start')" ]
  },
  "source" : "1a48a26b26f43feb.json",
  "parameterValues" : [ ]
}